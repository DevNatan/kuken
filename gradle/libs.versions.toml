[versions]
kotlin = "1.7.10"
ktx-serialization = "1.3.3"
ktx-coroutines = "1.6.2"
ktx-atomicfu = "0.19.0"
ktx-datetime = "0.4.0"
exposed = "0.41.1"
koin = "3.3.2"
koinKtor = "3.3.0"
log4j = "2.17.2"
ktor = "2.1.0"
snowflake-id = "0.0.1"
docker-java = "3.2.13"
postgresql = "42.4.0"
javaJwt = "4.0.0"
yoki = "0.0.1-SNAPSHOT"
bcprov = "1.71"
jedis = "4.2.0"
hibernate-validator = "8.0.0.CR3"
expressly = "5.0.0"
plugin-shadowjar = "7.1.2"
plugin-kotlinter = "3.13.0"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-annotations-common = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
ktx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "ktx-atomicfu" }
ktx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "ktx-datetime" }
ktx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "ktx-serialization" }
ktx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "ktx-serialization" }
ktx-serialization-hocon = { module = "org.jetbrains.kotlinx:kotlinx-serialization-hocon", version.ref = "ktx-serialization" }
ktx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "ktx-coroutines" }
ktx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "ktx-coroutines" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koinKtor" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-slf4jImpl = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }
dockerJava = { module = "com.github.docker-java:docker-java", version.ref = "docker-java" }
dockerJava-core = { module = "com.github.docker-java:docker-java-core", version.ref = "docker-java" }
dockerJava-api = { module = "com.github.docker-java:docker-java-api", version.ref = "docker-java" }
dockerJava-transport-okhttp = { module = "com.github.docker-java:docker-java-transport-okhttp", version.ref = "docker-java" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-host-common = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-server-test = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-server-feature-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-feature-defaultheaders = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-feature-autoheadresponse = { module = "io.ktor:ktor-server-auto-head-response", version.ref = "ktor" }
ktor-server-feature-calllogging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-feature-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-feature-statuspages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-feature-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-feature-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-feature-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
snowflakeId = { module = "de.mkammerer.snowflake-id:snowflake-id", version.ref = "snowflake-id" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
javaJwt = { module = "com.auth0:java-jwt", version.ref = "javaJwt" }
yoki-core = { module = "org.katan:yoki-core", version.ref = "yoki" }
yoki-engine-docker = { module = "org.katan:yoki-engine-docker", version.ref = "yoki" }
bcprov = { module = "org.bouncycastle:bcprov-jdk15to18", version.ref = "bcprov" }
jedis = { module = "redis.clients:jedis", version.ref = "jedis" }
expressly = { module = "org.glassfish.expressly:expressly", version.ref = "expressly" }
hibernateValidator = { module = "org.hibernate.validator:hibernate-validator", version.ref = "hibernate-validator" }
hibernateValidator-cdi = { module = "org.hibernate.validator:hibernate-validator-cdi", version.ref = "hibernate-validator" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-atomicfu = { id = "org.jetbrains.kotlin.plugin.atomicfu", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
shadowjar = { id = "com.github.johnrengelman.shadow", version.ref = "plugin-shadowjar" }
kotlinter = { id = "org.jmailen.kotlinter", version.ref = "plugin-kotlinter" }