[versions]
kotlin = "1.7.10"
ktx-serialization = "1.3.3"
ktx-coroutines = "1.6.2"
ktx-atomicfu = "0.17.2"
ktx-datetime = "0.3.2"
exposed = "0.38.2"
koin = "3.2.0"
log4j = "2.17.2"
ktor = "2.1.0"
snowflake-id = "0.0.1"
docker-java = "3.2.13"
postgresql = "42.4.0"
javaJwt = "4.0.0"
yoki = "0.0.1-SNAPSHOT"
bcprov = "1.71"
jedis = "4.2.0"
hibernate-validator = "8.0.0.CR3"
expressly = "5.0.0"
plugin-shadowjar = "7.1.2"
plugin-ktlint = "0.46.1"
plugin-spotless = "6.9.0"

[libraries.kotlin-test]
module = "org.jetbrains.kotlin:kotlin-test"
version.ref = "kotlin"

[libraries.kotlin-test-annotations-common]
module = "org.jetbrains.kotlin:kotlin-test-annotations-common"
version.ref = "kotlin"

[libraries.ktx-atomicfu]
module = "org.jetbrains.kotlinx:atomicfu"
version.ref = "ktx-atomicfu"

[libraries.ktx-datetime]
module = "org.jetbrains.kotlinx:kotlinx-datetime"
version.ref = "ktx-datetime"

[libraries.ktx-serialization-json]
module = "org.jetbrains.kotlinx:kotlinx-serialization-json"
version.ref = "ktx-serialization"

[libraries.ktx-serialization-hocon]
module = "org.jetbrains.kotlinx:kotlinx-serialization-hocon"
version.ref = "ktx-serialization"

[libraries.ktx-serialization-core]
module = "org.jetbrains.kotlinx:kotlinx-serialization-core"
version.ref = "ktx-serialization"

[libraries.ktx-coroutines-core]
module = "org.jetbrains.kotlinx:kotlinx-coroutines-core"
version.ref = "ktx-coroutines"

[libraries.ktx-coroutines-test]
module = "org.jetbrains.kotlinx:kotlinx-coroutines-test"
version.ref = "ktx-coroutines"

[libraries.koin-core]
module = "io.insert-koin:koin-core"
version.ref = "koin"

[libraries.koin-test]
module = "io.insert-koin:koin-test"
version.ref = "koin"

[libraries.koin-ktor]
module = "io.insert-koin:koin-ktor"
version.ref = "koin"

[libraries.log4j-core]
module = "org.apache.logging.log4j:log4j-core"
version.ref = "log4j"

[libraries.log4j-slf4jImpl]
module = "org.apache.logging.log4j:log4j-slf4j-impl"
version.ref = "log4j"

[libraries.dockerJava]
module = "com.github.docker-java:docker-java"
version.ref = "docker-java"

[libraries.dockerJava-core]
module = "com.github.docker-java:docker-java-core"
version.ref = "docker-java"

[libraries.dockerJava-api]
module = "com.github.docker-java:docker-java-api"
version.ref = "docker-java"

[libraries.dockerJava-transport-okhttp]
module = "com.github.docker-java:docker-java-transport-okhttp"
version.ref = "docker-java"

[libraries.ktor-server-auth]
module = "io.ktor:ktor-server-auth"
version.ref = "ktor"

[libraries.ktor-server-auth-jwt]
module = "io.ktor:ktor-server-auth-jwt"
version.ref = "ktor"

[libraries.ktor-server-cio]
module = "io.ktor:ktor-server-cio"
version.ref = "ktor"

[libraries.ktor-server-core]
module = "io.ktor:ktor-server-core"
version.ref = "ktor"

[libraries.ktor-server-websockets]
module = "io.ktor:ktor-server-websockets"
version.ref = "ktor"

[libraries.ktor-server-host-common]
module = "io.ktor:ktor-server-host-common"
version.ref = "ktor"

[libraries.ktor-server-feature-resources]
module = "io.ktor:ktor-server-resources"
version.ref = "ktor"

[libraries.ktor-server-feature-defaultheaders]
module = "io.ktor:ktor-server-default-headers"
version.ref = "ktor"

[libraries.ktor-server-feature-autoheadresponse]
module = "io.ktor:ktor-server-auto-head-response"
version.ref = "ktor"

[libraries.ktor-server-feature-calllogging]
module = "io.ktor:ktor-server-call-logging"
version.ref = "ktor"

[libraries.ktor-server-feature-content-negotiation]
module = "io.ktor:ktor-server-content-negotiation"
version.ref = "ktor"

[libraries.ktor-server-feature-statuspages]
module = "io.ktor:ktor-server-status-pages"
version.ref = "ktor"

[libraries.ktor-server-feature-cors]
module = "io.ktor:ktor-server-cors"
version.ref = "ktor"

[libraries.ktor-client-core]
module = "io.ktor:ktor-client-core"
version.ref = "ktor"

[libraries.ktor-client-cio]
module = "io.ktor:ktor-client-cio"
version.ref = "ktor"

[libraries.ktor-client-feature-resources]
module = "io.ktor:ktor-client-resources"
version.ref = "ktor"

[libraries.ktor-client-feature-content-negotiation]
module = "io.ktor:ktor-client-content-negotiation"
version.ref = "ktor"

[libraries.ktor-serialization-kotlinx-json]
module = "io.ktor:ktor-serialization-kotlinx-json"
version.ref = "ktor"

[libraries.ktor-server-test]
module = "io.ktor:ktor-server-test-host"
version.ref = "ktor"

[libraries.snowflakeId]
module = "de.mkammerer.snowflake-id:snowflake-id"
version.ref = "snowflake-id"

[libraries.postgresql]
module = "org.postgresql:postgresql"
version.ref = "postgresql"

[libraries.exposed-core]
module = "org.jetbrains.exposed:exposed-core"
version.ref = "exposed"

[libraries.exposed-jdbc]
module = "org.jetbrains.exposed:exposed-jdbc"
version.ref = "exposed"

[libraries.exposed-kotlin-datetime]
module = "org.jetbrains.exposed:exposed-kotlin-datetime"
version.ref = "exposed"

[libraries.exposed-dao]
module = "org.jetbrains.exposed:exposed-dao"
version.ref = "exposed"

[libraries.javaJwt]
module = "com.auth0:java-jwt"
version.ref = "javaJwt"

[libraries.yoki-core]
module = "org.katan:yoki-core"
version.ref = "yoki"

[libraries.yoki-engine-docker]
module = "org.katan:yoki-engine-docker"
version.ref = "yoki"

[libraries.bcprov]
module = "org.bouncycastle:bcprov-jdk15to18"
version.ref = "bcprov"

[libraries.jedis]
module = "redis.clients:jedis"
version.ref = "jedis"

[libraries.hibernateValidator]
module = "org.hibernate.validator:hibernate-validator"
version.ref = "hibernate-validator"

[libraries.hibernateValidator-cdi]
module = "org.hibernate.validator:hibernate-validator-cdi"
version.ref = "hibernate-validator"

[libraries.expressly]
module = "org.glassfish.expressly:expressly"
version.ref = "expressly"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-atomicfu = { id = "org.jetbrains.kotlin.plugin.atomicfu", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
shadowjar = { id = "com.github.johnrengelman.shadow", version.ref = "plugin-shadowjar" }
spotless = { id = "com.diffplug.spotless", version.ref = "plugin-spotless" }