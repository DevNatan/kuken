[versions]
kotlin = "2.1.20"
ktx-serialization = "1.9.0"
ktx-coroutines = "1.8.1"
ktx-atomicfu = "0.28.0"
ktx-datetime = "0.6.2"
exposed = "0.61.0"
koin = "4.1.0"
koinKtor = "4.1.0"
log4j = "2.25.0"
ktor = "3.2.0"
snowflake-id = "0.0.2"
postgresql = "42.7.7"
javaJwt = "4.5.0"
yoki = "0.2.0"
bcprov = "1.81"
jedis = "6.0.0"
hibernate-validator = "9.0.1.Final"
expressly = "6.0.0"
plugin-shadowjar = "8.3.6"
plugin-kotlinter = "5.1.1"
detekt = "1.23.8"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-annotations-common = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
ktx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "ktx-atomicfu" }
ktx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "ktx-datetime" }
ktx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "ktx-serialization" }
ktx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "ktx-serialization" }
ktx-serialization-hocon = { module = "org.jetbrains.kotlinx:kotlinx-serialization-hocon", version.ref = "ktx-serialization" }
ktx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "ktx-coroutines" }
ktx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "ktx-coroutines" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koinKtor" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-slf4j2 = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-host-common = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-server-test = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-server-feature-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-feature-defaultHeaders = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
ktor-server-feature-autoHeadResponse = { module = "io.ktor:ktor-server-auto-head-response", version.ref = "ktor" }
ktor-server-feature-calllogging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-feature-contentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-feature-statuspages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-feature-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-feature-dataConversion = { module = "io.ktor:ktor-server-data-conversion", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-feature-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-feature-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
snowflakeId = { module = "de.mkammerer.snowflake-id:snowflake-id", version.ref = "snowflake-id" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
javaJwt = { module = "com.auth0:java-jwt", version.ref = "javaJwt" }
yoki = { module = "me.devnatan:yoki", version.ref = "yoki" }
bcprov = { module = "org.bouncycastle:bcprov-jdk15to18", version.ref = "bcprov" }
jedis = { module = "redis.clients:jedis", version.ref = "jedis" }
expressly = { module = "org.glassfish.expressly:expressly", version.ref = "expressly" }
hibernateValidator = { module = "org.hibernate.validator:hibernate-validator", version.ref = "hibernate-validator" }
hibernateValidator-cdi = { module = "org.hibernate.validator:hibernate-validator-cdi", version.ref = "hibernate-validator" }

[bundles]
exposed = ["exposed-core", "exposed-dao", "exposed-jdbc", "exposed-kotlin-datetime"]

[plugins]
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-atomicfu = { id = "org.jetbrains.kotlin.plugin.atomicfu", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
shadowjar = { id = "com.gradleup.shadow", version.ref = "plugin-shadowjar" }
kotlinter = { id = "org.jmailen.kotlinter", version.ref = "plugin-kotlinter" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }